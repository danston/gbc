{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"set",
				"setIntegralPrecision	(AllCoordinatesR2.hpp)"
			],
			[
				"num",
				"numSamples"
			],
			[
				"Thre",
				"ThreePointsR2"
			],
			[
				"coor",
				"coordInd"
			],
			[
				"Wa",
				"WachspressR2"
			],
			[
				"prin",
				"print	(AllCoordinatesR2.hpp)"
			],
			[
				"Ver",
				"VertexR2	(main.cpp)"
			],
			[
				"All",
				"AllCoordinatesR2"
			],
			[
				"_is",
				"_isEdgeLengthSet"
			],
			[
				"_i",
				"_isEdgeLengthSet"
			],
			[
				"Tr",
				"TriangleCoordinatesR2"
			],
			[
				"_mesh",
				"_meshVertices"
			],
			[
				"new",
				"newEdgeLength"
			],
			[
				"wra",
				"wrapCoordinates"
			],
			[
				"Mesh",
				"MeshR2	(HarmonicR2.hpp)"
			],
			[
				"ver",
				"VertexR2"
			],
			[
				"are",
				"_areCoordinatesComputed"
			],
			[
				"find",
				"findFace"
			],
			[
				"ex",
				"extra	(HarmonicR2.hpp)"
			],
			[
				"size",
				"size_t"
			],
			[
				"is",
				"isMeshCreated"
			],
			[
				"allo",
				"allowSteinerPoints	(main.cpp)"
			],
			[
				"edge",
				"edgeLength"
			],
			[
				"edg",
				"edgeLength"
			],
			[
				"com",
				"compute"
			],
			[
				"Tri",
				"TriangulatorR2	(LaplaceR2.hpp)"
			],
			[
				"Trian",
				"TriangulatorR2"
			],
			[
				"max",
				"maxNumIter"
			],
			[
				"Sol",
				"SolverType"
			],
			[
				"Cir",
				"CircleType"
			],
			[
				"le",
				"lengthIJ"
			],
			[
				"circ",
				"circleType"
			],
			[
				"po",
				"pointwise/MeanValueR2"
			],
			[
				"Po",
				"PointwiseWrapperR2	(BarycentricWrapperR2.hpp)"
			],
			[
				"You",
				"YourPointClass"
			],
			[
				"coo",
				"coords"
			],
			[
				"inc",
				"include"
			],
			[
				"Baryce",
				"BarycentricCoordinatesR2	(WachspressR2.hpp)"
			],
			[
				"Vert",
				"VertexR2	(WachspressR2.hpp)"
			],
			[
				"get",
				"getPreTime"
			],
			[
				"inv",
				"invW2"
			],
			[
				"sig",
				"sigma_0"
			],
			[
				"Ha",
				"HalfEdgeHandle"
			],
			[
				"sigma",
				"sigma_1"
			],
			[
				"Hal",
				"HalfEdgeHandle"
			],
			[
				"ela",
				"elapsed"
			],
			[
				"_tree",
				"_treeTime"
			],
			[
				"scala",
				"scalarProduct"
			],
			[
				"compute",
				"computeMV"
			],
			[
				"_co",
				"_coordsUpdate3"
			],
			[
				"_coo",
				"_coordsUpdate3"
			],
			[
				"_c",
				"_coordsUpdate3"
			],
			[
				"res",
				"resize"
			],
			[
				"phi",
				"_phi1"
			],
			[
				"Verte",
				"VertexR2"
			],
			[
				"MeanVa",
				"MeanValueR2"
			],
			[
				"name",
				"namespace"
			],
			[
				"el",
				"elapsed	(geom_BlendedCoordinates.hpp)"
			],
			[
				"cu",
				"cutk	(geom_BLExporterCommand.hpp)"
			],
			[
				"gen",
				"generate"
			],
			[
				"Mean",
				"MeanValueCoordinates	(geom_compositeBarycentricMain.cpp)"
			],
			[
				"all",
				"allSet"
			],
			[
				"co",
				"coords"
			],
			[
				"cor",
				"coords"
			],
			[
				"coords",
				"coordsUpdate"
			],
			[
				"p",
				"points"
			],
			[
				"vert",
				"verticesEnd	(geom_Mesh.hpp)"
			],
			[
				"reg",
				"registerBoundary	(geom_Mesh.hpp)"
			],
			[
				"exp",
				"express	(geom_InterpolationTest.cpp)"
			],
			[
				"mesh",
				"meshPath"
			],
			[
				"v",
				"vertices"
			],
			[
				"Pol",
				"Polygon	(geom_InterpolationTest.cpp)"
			],
			[
				"curr",
				"currFace"
			],
			[
				"type",
				"typename"
			],
			[
				"sigm",
				"sigma_1"
			],
			[
				"pre",
				"prevHE"
			],
			[
				"nBo",
				"nBoundaryPoints"
			],
			[
				"row",
				"rows	(geom_Mesh.hpp)"
			],
			[
				"col",
				"columns"
			],
			[
				"neig",
				"neighbourIndex"
			],
			[
				"half",
				"halfEdge"
			],
			[
				"VERT",
				"Vertices	(geom_Mesh.hpp)"
			],
			[
				"HALF",
				"HalfEdgeHandle	(geom_Mesh.hpp)"
			],
			[
				"pus",
				"push_back"
			],
			[
				"face",
				"faceHandle"
			],
			[
				"create",
				"createHalfEdges	(geom_HarmonicCoordinates.hpp)"
			],
			[
				"Face",
				"FaceHandle"
			],
			[
				"sour",
				"sourceMesh"
			],
			[
				"poly",
				"polyPlot	(geom_RemoteDebugCommands.hpp)"
			],
			[
				"point",
				"points	(geom_InterpolationTest.cpp)"
			],
			[
				"setAll",
				"setAllowedSteinerPoints	(geom_PolygonMeshGenerator2.hpp)"
			],
			[
				"path",
				"pathToPoly"
			],
			[
				"over",
				"override"
			],
			[
				"che",
				"checkFoldovers	(trimesh.hpp)"
			],
			[
				"string",
				"std::string"
			],
			[
				"bou",
				"boundednessTest	(mesh.hpp)"
			],
			[
				"linear",
				"linearPrecisionTest	(mesh.hpp)"
			],
			[
				"trime",
				"trimesh"
			],
			[
				"eva",
				"evaldata"
			],
			[
				"squ",
				"squaredError"
			],
			[
				"was",
				"wasSubdivided"
			],
			[
				"eval",
				"evaldata	(mesh.cpp)"
			],
			[
				"Eva",
				"Evaldata"
			],
			[
				"fac",
				"tmpFaceIndex"
			],
			[
				"area",
				"area_first"
			],
			[
				"Mea",
				"MeanValueCoordinates::compute"
			],
			[
				"vERTEX",
				"Vertex"
			],
			[
				"grad",
				"gradient"
			],
			[
				"spli",
				"splineBaseSecDer"
			],
			[
				"def",
				"default"
			],
			[
				"VertexSca",
				"VertexScaledNotUnif"
			],
			[
				"VertexSc",
				"VertexScaledNotUnif"
			],
			[
				"Vertex",
				"VertexRotated"
			],
			[
				"s",
				"size"
			],
			[
				"opt",
				"optQuery"
			],
			[
				"sta",
				"stats"
			],
			[
				"newt",
				"newton_solver"
			],
			[
				"time",
				"timeToCompMec"
			],
			[
				"init",
				"initialVertices"
			],
			[
				"Max",
				"MaximumEntropyCoordinates	(coordinates.hpp)"
			],
			[
				"in",
				"include"
			],
			[
				"val",
				"valency"
			],
			[
				"Solver",
				"Solverstats	(mesh.hpp)"
			],
			[
				"clear",
				"clearSolverStats	(mesh.hpp)"
			],
			[
				"erro",
				"errors"
			],
			[
				"ob",
				"objective"
			],
			[
				"end",
				"endl"
			],
			[
				"st",
				"step"
			]
		]
	},
	"buffers":
	[
		{
			"file": "2d/main.cpp",
			"settings":
			{
				"buffer_size": 3475,
				"line_ending": "Unix"
			}
		},
		{
			"file": "2d/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1623,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"command_palette":
	{
		"height": 87.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"in",
				"Indentation: Reindent Lines"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/danston/Documents/github/gbc/2d/extra/AllCoordinatesR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/IsolinerR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/VertexR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/VertexExpressionsR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/TriangulatorR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/TriangleCoordinatesR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/SegmentCoordinatesR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/BarycentricCoordinatesR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/Face.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/Halfedge.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/MeshR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/HarmonicR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/LocalR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/PositiveGordonWixomR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/ThreePointsR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/GordonWixomR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/WachspressR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/LaplaceR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/SibsonR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/MaximumEntropyR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/AffineR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/PositiveMeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/CubicMeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/PoissonR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/MetricR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/BilinearR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/DiscreteHarmonicR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/MeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/BarycentricWrapperR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/CMakeLists.txt",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/lbcsolver/LbcSolver.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/lbcsolver/DataTypes.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/lbcsolver/DataSetup.hpp",
		"/Users/danston/Documents/github/gbc/2d/coords/QuadraticProgrammingR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/FaceR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/quadprog/Array.cpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/quadprog/Array.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/quadprog/QuadProg++.cpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/quadprog/QuadProg++.hpp",
		"/Users/danston/Documents/github/gbc/test",
		"/Users/danston/Documents/github/gbc/gbc.sublime-project",
		"/Users/danston/Documents/github/gbc/gbc.sublime-workspace",
		"/Users/danston/Documents/github/gbc/2d/pointwise/SibsonR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/LaplaceR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/PositiveMeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/AffineR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/MeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/triangle/triangle.cpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/triangle/triangle.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/PoissonR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/WachspressR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/MaximumEntropyR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/PositiveGordonWixomR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/GordonWixomR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/gaussinteg/gauss_legendre.cpp",
		"/Users/danston/Documents/github/gbc/2d/extra/libs/gaussinteg/gauss_legendre.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/CubicMeanValueR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/extra/gaussinteg/gauss_legendre.cpp",
		"/Users/danston/Documents/github/gbc/2d/extra/gaussinteg/gauss_legendre.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/BilinearR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/DiscreteHarmonicR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/MetricR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/ThreePointsR2.hpp",
		"/Users/danston/Documents/github/gbc/2d/pointwise/DiscreteHarmonicR2.h",
		"/Users/danston/Documents/github/gbc/2d/main.cpp",
		"/Users/danston/Documents/github/gbc/.gitignore",
		"/Users/danston/Documents/github/gbc/LICENSE",
		"/Users/danston/Documents/github/gbc/README.md",
		"/Users/danston/Documents/github/gbc/2d/pointwise/WachspressR2.h",
		"/Users/danston/Documents/github/gbc/2d/extra/VertexExpressionsR2.h",
		"/Users/danston/Documents/github/gbc/2d/extra/VertexR2.h",
		"/Users/danston/Documents/github/gbc/2d/extra/BarycentricCoordinatesR2.h",
		"/Users/danston/Documents/github/gbc/extra/BarycentricCoordinatesR2.h",
		"/Users/danston/Documents/Proposal/The_final_version/usiinfdocprop-sample.tex",
		"/Users/danston/Dropbox/Loop Coordinates/paper.tex",
		"/Users/danston/Documents/Three_point_family/3-point-family/tex/04-continuity_outside.tex",
		"/Users/danston/Documents/Three_point_family/3-point-family/tex/01-introduction.tex",
		"/Users/danston/Documents/Three_point_family/3-point-family/tex/00-three-pts-fam.tex",
		"/Users/danston/Documents/Three_point_family/3-point-family/tex/05-derivative.tex",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/Geom.sublime-project",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/trees/geom_TreeTypes.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/trees/geom_Tree.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/barycentric/geom_MECCoordinates.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/barycentric/geom_HarmonicCoordinates.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/barycentric/geom_MeanValueCoordinates.hpp",
		"/Users/danston/Documents/GMP_2017/imgs/timings/out",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/mesh/geom_Mesh.hpp",
		"/Users/danston/Desktop/newcode",
		"/Users/danston/Desktop/oldblend",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/compositebc/geom_compositeBarycentricMain.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/meshgenerators/geom_PolygonMeshGenerator2.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/plotter/geom_RemoteDebugCommands.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/base/geom_GeomInstance.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/runners/geom_VTKConvertCommand.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/plotter/geom_EmptyRemoteDebugCommands.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/primitives/geom_Polygon.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/tests/geom_InterpolationTest.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/commandline/geom_Poly2MeshCommand.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/pum/pum_InterpolateFunctionCommand.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/external/tetgen/tetgen.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/main.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/mesh/geom_MeshPrimitives.hpp",
		"/Users/danston/Downloads/mts/ReadMe.txt",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/tests/geom_ParallelMeanValueTest.cpp",
		"/Users/danston/Documents/Blending/PHD_Framework/Headers/Coordinates.h",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/runners/geom_RunTreeBenchmark.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/mesh/geom_MeshHandles.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/topology/geom_HalfEdgeGraph.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/trees/geom_TreeHandles.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/barycentric/geom_ThreePointFamily.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/tests/geom_TreeTest.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/tests/geom_GeomTest.cpp",
		"/Users/danston/Documents/Blending/PHD_Framework/Headers/Triangulation.h",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/plotter/geom_RemoteDebugCommands.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/runners/geom_BaryMapping2dRunner.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/plotter/geom_RemoteDebugging.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/commandline/geom_Commands.cpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/morphing/geom_CompositeMorphing.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/meshreaders/geom_QuadMeshReader.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/barycentric/geom_ParallelMeanValue.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/meshreaders/geom_ObjMeshReader.hpp",
		"/Users/danston/Documents/Teseo_Patrick_library/main/geom/src/meshgenerators/geom_MeshGridGenerator.hpp",
		"/Users/danston/Documents/Subdivision_framework/Experiments/foldovers/obj2subobj.sh",
		"/Users/danston/Documents/Subdivision_framework/Experiments/foldovers/poly2obj.sh",
		"/Users/danston/Documents/Subdivision_framework/Bin/Subdivide/Fast_evaluation/src/quadmesh.cpp",
		"/Users/danston/Documents/Subdivision_framework/Bin/Subdivide/Fast_evaluation/src/quadmesh.hpp",
		"/Users/danston/Documents/Subdivision_framework/Bin/Subdivide/Fast_evaluation/src/trimesh.cpp",
		"/Users/danston/Documents/Subdivision_framework/Bin/Subdivide/Fast_evaluation/src/trimesh.hpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"        ",
			"Z_",
			"_init",
			"3",
			"type",
			"Scalar",
			"x",
			"Utils",
			"_mesh",
			"(int)",
			"visPoly",
			"vispoly",
			"stack",
			"Circ",
			"_circ",
			"_circleType",
			"MV",
			"CircleTy",
			"circleTy",
			"_circleTy",
			"gt",
			"gn",
			"b[",
			"phi",
			"x",
			"phi",
			"x",
			"phi",
			"0_0",
			"time",
			"Quadtree",
			"face(",
			"nFa",
			"faces",
			"createHal",
			"_createHal",
			"_points",
			"points(",
			"points",
			"_tol",
			"thir",
			"com",
			"z",
			"zcom",
			"MeanValueCoordinates",
			"VTKConvertCommand",
			"blendedco",
			"argv",
			"argc",
			"main(",
			"parser",
			"map",
			"manual",
			"_manual",
			"_manualBRefine",
			"nBoundaryPoints",
			"points",
			"pow",
			"Power",
			"point(",
			"vertex(",
			"faceHalf",
			"face(",
			"haLFeDGE",
			"halfedge(",
			"apply(",
			"apply",
			"vj",
			"Matrixd",
			"Meshd",
			"halfedge(con",
			"halfedge(",
			"halfed",
			"tre",
			"source",
			"HARMONIC",
			"Harmonic",
			"wachspress",
			"-RunTreeBenchmark",
			"setPoints",
			"-p2m",
			"PlotFunFromFiles",
			"_functions",
			"-plot",
			"\";\n",
			"lm",
			"qmesh->",
			"qmesh.",
			"findFa",
			"SplineBaseDerV",
			"SplineBase",
			"SplineBaseLP",
			"SplineBase",
			"SplineBase(i,v,w)",
			"Kovnatsky Artiom",
			"case",
			"newt",
			"evaluateAtPoint",
			"save(",
			"save",
			"class Optimize\n{\n\n\n	public static void main(String[] args) {\n		for(int i = 0; i < 16; ++i) {\n			int im = i % 4;\n			int id = i / 4;\n\n			System.out.println(\"sum.x() += a[\"+i+\"] * SplineBase<\"+id+\">::Eval(v) * SplineBaseDer<\"+im+\">::Eval(u);\\n\":\n				System.out.println(\"sum.y() += a[\"+i+\"] * SplineBase<\"+im+\">::Eval(u) * SplineBaseDer<\"+id+\">::Eval(v);\\n\\n\";\n			}\n		}\n	}",
			"\n\npublic static void main(String[] args) {\n	for(int i = 0; i < 16; ++i) {\n		int im = i % 4;\n		int id = i / 4;\n\n		System.out.println(\"sum.x() += a[\"+i+\"] * SplineBase<\"+id+\">::Eval(v) * SplineBaseDer<\"+im+\">::Eval(u);\\n\":\n			System.out.println(\"sum.y() += a[\"+i+\"] * SplineBase<\"+im+\">::Eval(u) * SplineBaseDer<\"+id+\">::Eval(v);\\n\\n\";\n		}\n	}",
			"plineBase(",
			"(",
			"splineBase",
			"splineBaseDer",
			"splineBase",
			"    double operator()(const double t) \n",
			"SplineBase<",
			"splineBase",
			"plineBase(",
			"sum +=",
			";",
			"createFacePo",
			"assert",
			"size",
			"polyVertices",
			"Se",
			"Partition",
			"VectorXs",
			"(1.0 - v - w)",
			"std::pow(1 - v - w, 2)",
			"std::pow(1 - v - w, 3)",
			"std::pow(w, 3)",
			"std::pow(w, 4)",
			"std::pow(v, 3)",
			"std::pow(v, 4)",
			"std::pow(u, 3)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"(u)",
			"u",
			"\\cite",
			"\\cgalCite"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "2d/main.cpp",
					"settings":
					{
						"buffer_size": 3475,
						"regions":
						{
						},
						"selection":
						[
							[
								2247,
								2247
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 791.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "2d/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 1623,
						"regions":
						{
						},
						"selection":
						[
							[
								720,
								720
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage",
							"tab_size": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.latextools":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"tree",
				"src/trees/geom_Tree.hpp"
			],
			[
				"mesh",
				"src/mesh/geom_Mesh.hpp"
			],
			[
				"meccoo",
				"src/barycentric/geom_MECCoordinates.hpp"
			],
			[
				"harm",
				"src/barycentric/geom_HarmonicCoordinates.hpp"
			],
			[
				"polymes",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"remode",
				"src/plotter/geom_RemoteDebugCommands.hpp"
			],
			[
				"geomere",
				"src/plotter/geom_EmptyRemoteDebugCommands.cpp"
			],
			[
				"poly",
				"src/primitives/geom_Polygon.hpp"
			],
			[
				"vtk",
				"src/runners/geom_VTKConvertCommand.hpp"
			],
			[
				"interpolatec",
				"src/pum/pum_InterpolateFunctionCommand.cpp"
			],
			[
				"polmes",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"mean",
				"src/tests/geom_ParallelMeanValueTest.cpp"
			],
			[
				"meshha",
				"src/mesh/geom_MeshHandles.hpp"
			],
			[
				"hald",
				"src/topology/geom_HalfEdgeGraph.hpp"
			],
			[
				"treeben",
				"src/runners/geom_RunTreeBenchmark.cpp"
			],
			[
				"three",
				"src/barycentric/geom_ThreePointFamily.hpp"
			],
			[
				"tre",
				"src/tests/geom_TreeTest.cpp"
			],
			[
				"test",
				"src/tests/geom_GeomTest.cpp"
			],
			[
				"meshge",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"har",
				"src/barycentric/geom_HarmonicCoordinates.hpp"
			],
			[
				"remote",
				"src/plotter/geom_RemoteDebugCommands.hpp"
			],
			[
				"polygon",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"geom_b",
				"src/barycentric/geom_BlendedCoordinates.hpp"
			],
			[
				"blen",
				"src/barycentric/geom_BlendedCoordinates.hpp"
			],
			[
				"geom_in",
				"src/tests/geom_InterpolationTest.cpp"
			],
			[
				"composite",
				"src/compositebc/geom_compositeBarycentricMain.cpp"
			],
			[
				"composi",
				"src/morphing/geom_CompositeMorphing.hpp"
			],
			[
				"parall",
				"src/barycentric/geom_ParallelMeanValue.hpp"
			],
			[
				"geom_thr",
				"src/barycentric/geom_ThreePointFamily.hpp"
			],
			[
				"geom_polyme",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"",
				"src/meshgenerators/geom_MeshGridGenerator.hpp"
			],
			[
				"polygonmes",
				"src/meshgenerators/geom_PolygonMeshGenerator2.hpp"
			],
			[
				"poly2",
				"src/commandline/geom_Poly2MeshCommand.cpp"
			],
			[
				"quad",
				"src/meshreaders/geom_QuadMeshReader.hpp"
			],
			[
				"ob",
				"src/meshreaders/geom_ObjMeshReader.hpp"
			],
			[
				"sol",
				"solver.hpp"
			],
			[
				"trim",
				"trimesh.cpp"
			],
			[
				"sparsematrixiter",
				"unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h"
			],
			[
				"geompol",
				"primitives/geom_Polygon.hpp"
			],
			[
				"point",
				"trees/mutators/geom_PointMatch.hpp"
			],
			[
				"ima",
				"runners/geom_ImageMorphingCommand.hpp"
			],
			[
				"mai",
				"main.cpp"
			],
			[
				"obj",
				"meshreaders/geom_ObjMeshReader.hpp"
			],
			[
				"imagemo",
				"runners/geom_ImageMorphingCommand.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true
}
